{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b8b59bec",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import statsmodels.api as sm\n",
    "\n",
    "# Manually Input Multiple Data Points for Bradley Beal's Performance Over Multiple Seasons\n",
    "data = {\n",
    "    'Season': ['2012-13', '2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20', '2020-21', '2021-22', '2022-23'],\n",
    "    'PPG': [13.9, 17.1, 15.3, 17.4, 23.1, 22.6, 25.6, 30.5, 31.3, 23.2, 23.2],\n",
    "    'RPG': [3.8, 3.7, 3.8, 3.4, 3.1, 4.4, 5.0, 4.1, 4.7, 3.9, 3.9],\n",
    "    'APG': [2.4, 3.3, 3.1, 2.9, 3.5, 4.5, 5.5, 6.1, 4.4, 5.4, 5.4],\n",
    "    'Minutes': [31.2, 34.7, 33.4, 31.1, 34.9, 36.3, 36.9, 36.0, 35.8, 36.0, 33.5],\n",
    "    'Salary': ['$4.8M', '$5.5M', '$5.8M', '$7.1M', '$22.1M', '$25.1M', '$25.3M', '$27.1M', '$28.2M', '$33.4M', '$43.2M']  # Formatted for readability\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate the Efficiency dynamically (without a bunch of manual input)\n",
    "df['Efficiency'] = (df['PPG'] + df['RPG'] + df['APG']) / df['Minutes']\n",
    "\n",
    "# Display Bradley Beal's stats\n",
    "print(\"Bradley Beal's Multi-Season Stats (Rookie Year to SuperMax Extension Year):\")\n",
    "print(df)\n",
    "\n",
    "# Bar plot for Bradley Beal's performance metrics per season\n",
    "plt.figure(figsize=(12, 6))\n",
    "df.set_index('Season')[['PPG', 'RPG', 'APG']].plot(kind='bar', title=\"Bradley Beal's Performance Metrics\", legend=True)\n",
    "plt.xlabel('Season')\n",
    "plt.ylabel('Value')\n",
    "plt.show()\n",
    "\n",
    "# Scatter plot for Efficiency vs PPG with adjusted text placement to avoid overlap and to help colorblind indivduals (by labeling)\n",
    "plt.figure(figsize=(8, 6))\n",
    "for i, season in enumerate(df['Season']):\n",
    "    plt.scatter(df.loc[df['Season'] == season, 'Efficiency'], df.loc[df['Season'] == season, 'PPG'], s=100)\n",
    "    plt.text(df.loc[df['Season'] == season, 'Efficiency'].values[0], \n",
    "             df.loc[df['Season'] == season, 'PPG'].values[0] + 0.3 * (-1)**i,  # Alternating text offset to prevent overlap (kinda proud of this)\n",
    "             f\"{i+1} ({df.loc[df['Season'] == season, 'Salary'].values[0]})\", \n",
    "             fontsize=10, ha='right')\n",
    "plt.title(\"Bradley Beal's Efficiency vs Points Per Game\")\n",
    "plt.xlabel('Efficiency')\n",
    "plt.ylabel('PPG')\n",
    "plt.show()\n",
    "\n",
    "# Regression Analysis\n",
    "# Defines independent variables\n",
    "X = df[['Efficiency']]\n",
    "y = df['PPG']\n",
    "\n",
    "# Adding constant to the model for R-Squared\n",
    "X = sm.add_constant(X)\n",
    "\n",
    "# Fitting the regression model\n",
    "model = sm.OLS(y, X).fit()\n",
    "\n",
    "# Displays the summary\n",
    "print(model.summary())\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
